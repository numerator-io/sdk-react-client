{"version":3,"file":"index.cjs.js","sources":["../src/main/util/common.util.ts","../src/main/client/api.client.ts","../src/main/client/endpoint.client.ts","../src/main/client/index.tsx","../src/main/provider/context.provider.ts","../src/main/client/type.client.ts","../src/main/provider/index.tsx"],"sourcesContent":["/**\n * Deep copy an object using JSON.\n * @param obj - The object to be deep copied.\n * @returns A deep copy of the input object.\n */\nexport const deepCopy = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\n/**\n * Asynchronous sleep function using Promises.\n * @param milliseconds - The duration to sleep in milliseconds.\n * @returns A Promise that resolves after the specified duration.\n */\nexport const sleep = (milliseconds: number) => new Promise((resolve) => setTimeout(resolve, milliseconds));\n\n/**\n * Map an array of objects to a Record using a specific key.\n * @param array - The array of objects to be mapped.\n * @returns A Record where keys are extracted from the 'key' property of each object.\n */\nexport const mapArrayToRecord = <T extends { key: string }>(array: T[]): Record<string, T> => {\n  return Object.fromEntries(array.map((item) => [item.key, item]));\n};\n\n/**\n * Create a promise with a timeout.\n * @param promise - The original promise to be wrapped with a timeout.\n * @param timeout - The timeout duration in milliseconds.\n * @returns A Promise that resolves when the original promise resolves or rejects with a timeout error.\n */\nexport const withTimeout = <T>(promise: Promise<T>, timeout: number): Promise<T> => {\n  const timeoutPromise = new Promise<T>((_, reject) =>\n    setTimeout(() => reject(new Error('Operation timed out')), timeout),\n  );\n  return Promise.race([promise, timeoutPromise]);\n};\n/**\n * Convert snakecase object to camelcase object.\n * @param obj - The original object.\n * @returns A Promise that return camel object.\n */\nexport const snakeToCamel = (obj: any): any => {\n  if (obj === null || typeof obj !== 'object') {\n      return obj;\n  }\n\n  if (Array.isArray(obj)) {\n      return obj.map(snakeToCamel);\n  }\n\n  return Object.keys(obj).reduce((acc: any, key: string) => {\n      const camelKey = key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n      acc[camelKey] = snakeToCamel(obj[key]);\n      return acc;\n  }, {});\n}","import axios, { AxiosRequestConfig } from 'axios';\nimport { ApiClientInterface, ApiRequestOptions, ApiResponse, ConfigClient, ErrorResponse } from './type.client';\nimport { snakeToCamel } from '../util';\n\nexport class ApiClient implements ApiClientInterface {\n  readonly apiKey: string;\n  readonly baseUrl: string;\n  static readonly API_KEY_HEADER = 'X-NUM-API-KEY';\n\n  constructor(config: ConfigClient) {\n    this.apiKey = config.apiKey;\n    this.baseUrl = config.baseUrl || 'https://service-platform.dev.numerator.io'; //'https://api.numerator.io/v1';\n  }\n\n  async request<T>(apiRequestOptions: ApiRequestOptions): Promise<ApiResponse<T>> {\n    const url = `${this.baseUrl}/${apiRequestOptions.endpoint}`;\n    const headers = {\n      'Content-Type': 'application/json',\n      [ApiClient.API_KEY_HEADER]: this.apiKey,\n    };\n    const config: AxiosRequestConfig = {\n      url,\n      headers,\n      ...apiRequestOptions,\n    };\n\n    try {\n      const response = await axios.request<T>(config);\n      return { data: snakeToCamel(response.data), error: undefined };\n    } catch (error: Error | any) {\n      const axiosResponse = error.response;\n      if (axiosResponse) {\n        const errorResponse: ErrorResponse = {\n          message: axiosResponse.data?.message || 'Unknown Error',\n          errorCode: axiosResponse.data?.error_code || 'unknown_error',\n          errorStatus: axiosResponse.status,\n        };\n        return { data: undefined, error: errorResponse };\n      } else {\n        console.warn('AxiosError:', error.message);\n        return {\n          data: undefined,\n          error: { message: 'Unknown Error', error_code: 'unknown_error', http_status: 500 },\n        };\n      }\n    }\n  }\n}\n\nexport default ApiClient;\n","const END_POINT_BASE = 'api/sdk/feature-flag';\n\n// Get all feature flags config associated with the project\nexport const END_POINT_FEATURE_FLAG_CONFIG_LISTING = `${END_POINT_BASE}/listing`;\n\n// Get the config of a feature flag by key\nexport const END_POINT_FEATURE_FLAG_CONFIG_BY_KEY = `${END_POINT_BASE}/detail-by-key`;\n\n// Get the value of the feature flag by key\nexport const END_POINT_FEATURE_FLAG_VALUE_BY_KEY = `${END_POINT_BASE}/by-key`;\n","import { ApiClient } from './api.client';\nimport {\n  END_POINT_FEATURE_FLAG_CONFIG_BY_KEY,\n  END_POINT_FEATURE_FLAG_CONFIG_LISTING,\n  END_POINT_FEATURE_FLAG_VALUE_BY_KEY,\n} from './endpoint.client';\nimport {\n  ConfigClient,\n  ErrorResponse,\n  FeatureFlagConfig,\n  FeatureFlagConfigListingRequest,\n  FeatureFlagConfigListingResponse,\n  FeatureFlagValueByKeyRequest,\n  FlagVariationValue\n} from './type.client';\n\nexport class NumeratorClient {\n  private apiClient: ApiClient;\n\n  constructor(config: ConfigClient) {\n    this.apiClient = new ApiClient(config);\n  }\n\n  handleFeatureFlagNotFound = (): Promise<never> => {\n    return Promise.reject({\n      message: 'Feature Flag not found',\n      errorCode: 'FEATURE_FLAG_NOT_FOUND',\n      errorStatus: 404,\n    } as ErrorResponse);\n  };\n\n  async featureFlagConfigListing(request?: FeatureFlagConfigListingRequest): Promise<FeatureFlagConfigListingResponse> {\n    try {\n      const response = await this.apiClient.request<FeatureFlagConfigListingResponse>({\n        method: 'POST',\n        endpoint: END_POINT_FEATURE_FLAG_CONFIG_LISTING,\n        data: request || {},\n      });\n\n      if (response.error) {\n        console.warn('Error fetching featureFlagConfigListing due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      return response.data || { count: 0, data: [] };\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagConfigListing due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n\n  async allFeatureFlagsConfig(): Promise<FeatureFlagConfig[]> {\n    try {\n      let page = 0;\n      const size = 200;\n      let allConfigs: FeatureFlagConfig[] = [];\n      let configListingRes: FeatureFlagConfigListingResponse;\n\n      do {\n        configListingRes = await this.featureFlagConfigListing({\n          page: page++,\n          size: size,\n        });\n\n        allConfigs = allConfigs.concat(configListingRes.data);\n      } while (allConfigs.length < configListingRes.count);\n\n      return allConfigs;\n    } catch (error) {\n      console.error('Error fetching allFeatureFlagsConfig due to:', error);\n      throw error;\n    }\n  }\n\n  async featureFlagConfigByKey(key: string): Promise<FeatureFlagConfig> {\n    try {\n      const response = await this.apiClient.request<FeatureFlagConfig>({\n        method: 'GET',\n        endpoint: END_POINT_FEATURE_FLAG_CONFIG_BY_KEY,\n        params: { key },\n      });\n\n      if (response.error) {\n        console.warn('Error fetching featureFlagConfigByKey due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      if (!response.data) {\n        return this.handleFeatureFlagNotFound();\n      }\n\n      return response.data;\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagConfigByKey due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n\n  async getFeatureFlagByKey<T>(request: FeatureFlagValueByKeyRequest): Promise<FlagVariationValue> {\n    try {\n      const response = await this.apiClient.request<FlagVariationValue>({\n        method: 'POST',\n        endpoint: END_POINT_FEATURE_FLAG_VALUE_BY_KEY,\n        data: request,\n      });\n      if (response.error) {\n        console.warn('Error fetching featureFlagValueByKey due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      if (!response.data) {\n        return this.handleFeatureFlagNotFound();\n      }\n\n     return response.data\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagValueByKey due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n}\n\nexport default NumeratorClient;\n","import { createContext } from 'react';\nimport { NumeratorContextType } from './type.provider';\n\n// Create a context for the SDK\nexport const NumeratorContext = createContext<NumeratorContextType | undefined>(undefined);\n","import { AxiosRequestConfig } from 'axios';\n\n// --- Types for ConfigClient --- //\nexport type ConfigClient = {\n  apiKey: string;\n  baseUrl?: string;\n};\n\n// --- Types for ApiClient --- //\nexport interface ErrorResponse {\n  message: string;\n  errorCode: string;\n  errorStatus: number;\n}\n\nexport interface ApiResponse<T> {\n  data?: T;\n  error?: ErrorResponse | any;\n}\n\nexport interface ApiRequestOptions extends AxiosRequestConfig {\n  endpoint: string;\n}\n\nexport interface ApiClientInterface {\n  apiKey: string;\n  baseUrl: string;\n\n  request<T>(apiRequestOptions: ApiRequestOptions): Promise<ApiResponse<T>>;\n}\n\n// --- Types for Request/ Response --- //\nexport interface PaginationRequest {\n  page?: number;\n  size?: number;\n}\n\nexport interface PaginationResponse<T> {\n  count: number;\n  data: T[];\n}\n\nexport interface FeatureFlagConfigListingRequest extends PaginationRequest {\n  page?: number;\n  size?: number;\n}\n\nexport interface FeatureFlagValueByKeyRequest {\n  key: string;\n  context?: Record<string, any>;\n}\n\nexport interface FeatureFlagConfigListingResponse extends PaginationResponse<FeatureFlagConfig> {\n  count: number;\n  data: FeatureFlagConfig[];\n}\n\n// --- Types for Feature Flag --- //\nexport type VariationKeyType = 'stringValue' | 'booleanValue' | 'longValue' | 'doubleValue';\n\nexport enum FlagStatusEnum {\n  ON = 'ON',\n  OFF = 'OFF',\n}\n\nexport enum FlagValueTypeEnum {\n  BOOLEAN = 'BOOLEAN',\n  STRING = 'STRING',\n  LONG = 'LONG',\n  DOUBLE = 'DOUBLE',\n}\n\nexport interface FeatureFlagConfig {\n  id: string;\n  name: string;\n  key: string;\n  organizationId: string;\n  projectId: string;\n  status: FlagStatusEnum;\n  description?: string | null;\n  defaultOnVariationId: string;\n  defaultOffVariationId: string;\n  valueType: FlagValueTypeEnum;\n  createdAt: Date;\n}\n\nexport interface FlagVariationValue {\n  key: string;\n  status: FlagStatusEnum;\n  value: VariationValue;\n  valueType: FlagValueTypeEnum;\n}\n\nexport interface VariationValue {\n  stringValue?: string;\n  booleanValue?: boolean;\n  longValue?: number;\n  doubleValue?: number;\n}\n\nexport interface FlagEvaluationDetail<T> {\n  key: string,\n  value: T,\n  reason: Record<string, any> | null\n}\n","import React, { useContext, useState } from 'react';\n\nimport NumeratorClient from '../client';\nimport {\n  ConfigClient,\n  FeatureFlagConfig,\n  FlagEvaluationDetail\n} from '../client/type.client';\nimport { NumeratorContext } from './context.provider';\nimport { NumeratorContextType, NumeratorProviderProps } from './type.provider';\n\nconst initializeNumeratorClient = (configClient: ConfigClient): NumeratorClient => {\n  const numeratorClient: NumeratorClient = new NumeratorClient({\n    apiKey: configClient.apiKey,\n    baseUrl: configClient.baseUrl || 'https://service-platform.dev.numerator.io',\n  });\n\n  return numeratorClient;\n};\n\n// Create a provider component\nexport const NumeratorProvider: React.FC<NumeratorProviderProps> = ({ children, configClient, defaultContext }) => {\n  // Initialize the SDK client\n  const numeratorClient: NumeratorClient = initializeNumeratorClient(configClient);\n\n  const [featureFlags, setFeatureFlags] = useState<Record<string, any>>({});\n\n  const flagValueByKey = async (key: string, context: Record<string, any> | undefined) => {\n    return await numeratorClient.getFeatureFlagByKey({ key, context });\n  };\n\n  const allFlags = async (): Promise<FeatureFlagConfig[]> => {\n    return await numeratorClient.allFeatureFlagsConfig();\n  };\n\n  const booleanFlagVariation = async (\n    key: string,\n    defaultVal: boolean,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<FlagEvaluationDetail<boolean>> => {\n    try {\n      const requestContext = context ?? (useDefaultContext ? defaultContext : {});\n      const variation = await flagValueByKey(key, requestContext);\n      return {\n        key: key,\n        value: variation.value.booleanValue ?? false,\n        reason: {},\n      };\n    } catch (e) {\n      console.warn('Error fetching flag boolean variation:', e);\n      return {\n        key: key,\n        value: defaultVal,\n        reason: {},\n      };\n    }\n  };\n\n  const numberFlagVariation = async (\n    key: string,\n    defaultVal: number,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<FlagEvaluationDetail<number>> => {\n    try {\n      const requestContext = context ?? (useDefaultContext ? defaultContext : {});\n      const variation = await flagValueByKey(key, requestContext);\n      return {\n        key: key,\n        value: variation.value.longValue ?? variation.value.doubleValue ?? 0,\n        reason: {},\n      };\n    } catch (e) {\n      console.warn('Error fetching flag number variation:', e);\n      return {\n        key: key,\n        value: defaultVal,\n        reason: {},\n      };\n    }\n  };\n\n  const stringFlagVariation = async (\n    key: string,\n    defaultVal: string,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<FlagEvaluationDetail<string>> => {\n    try {\n      const requestContext = context ?? (useDefaultContext ? defaultContext : {});\n      const variation = await flagValueByKey(key, requestContext);\n      return {\n        key: key,\n        value: variation.value.stringValue ?? '',\n        reason: {},\n      };\n    } catch (e) {\n      console.warn('Error fetching flag string variation:', e);\n      return {\n        key: key,\n        value: defaultVal,\n        reason: {},\n      };\n    }\n  };\n\n  const initFeatureFlag = (key: string, defaultVal: any) => {\n    featureFlags[key] = defaultVal\n    setFeatureFlags(featureFlags);\n  };\n\n  const getFeatureFlag = async (\n    key: string,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<any> => {\n    const defaultVal = featureFlags[key];\n    switch (typeof defaultVal) {\n      case 'boolean':\n        const resBoolean = await booleanFlagVariation(key, defaultVal, context, useDefaultContext);\n        return resBoolean.value as boolean;\n      case 'number':\n        const resNumber = await numberFlagVariation(key, defaultVal, context, useDefaultContext);\n        return resNumber.value as number;\n\n      case 'string':\n        const resString = await stringFlagVariation(key, defaultVal, context, useDefaultContext);\n        return resString.value as string;\n    }\n  };\n\n  // Create an object with SDK methods and state to be shared\n  const sdkContextValue: NumeratorContextType = {\n    allFlags,\n    booleanFlagVariation,\n    numberFlagVariation,\n    stringFlagVariation,\n    initFeatureFlag,\n    getFeatureFlag,\n  };\n\n  return <NumeratorContext.Provider value={sdkContextValue}>{children}</NumeratorContext.Provider>;\n};\n\n// Custom hook to access the SDK context value\nexport const useNumeratorContext = () => {\n  const context = useContext(NumeratorContext);\n  if (!context) {\n    throw new Error('NumeratorClient must be used within a NumeratorProvider');\n  }\n  return context;\n};\n"],"names":["snakeToCamel","obj","Array","isArray","map","Object","keys","reduce","acc","key","replace","_","letter","toUpperCase","ApiClient","constructor","config","this","apiKey","baseUrl","request","apiRequestOptions","url","endpoint","headers","API_KEY_HEADER","response","axios","data","error","undefined","axiosResponse","message","_a","errorCode","_b","error_code","errorStatus","status","console","warn","http_status","END_POINT_BASE","END_POINT_FEATURE_FLAG_CONFIG_LISTING","END_POINT_FEATURE_FLAG_CONFIG_BY_KEY","END_POINT_FEATURE_FLAG_VALUE_BY_KEY","NumeratorClient","handleFeatureFlagNotFound","Promise","reject","apiClient","featureFlagConfigListing","method","count","allFeatureFlagsConfig","page","size","configListingRes","allConfigs","concat","length","featureFlagConfigByKey","params","getFeatureFlagByKey","NumeratorContext","createContext","FlagStatusEnum","FlagValueTypeEnum","children","configClient","defaultContext","numeratorClient","initializeNumeratorClient","featureFlags","setFeatureFlags","useState","flagValueByKey","context","__awaiter","booleanFlagVariation","defaultVal","useDefaultContext","requestContext","variation","value","booleanValue","reason","e","numberFlagVariation","_c","longValue","doubleValue","stringFlagVariation","stringValue","sdkContextValue","allFlags","initFeatureFlag","getFeatureFlag","_jsx","jsx","Provider","useContext","Error"],"mappings":"+aAwCO,MAAMA,EAAgBC,GACf,OAARA,GAA+B,iBAARA,EAChBA,EAGPC,MAAMC,QAAQF,GACPA,EAAIG,IAAIJ,GAGZK,OAAOC,KAAKL,GAAKM,QAAO,CAACC,EAAUC,KAEtCD,EADiBC,EAAIC,QAAQ,aAAa,CAACC,EAAGC,IAAWA,EAAOC,iBAChDb,EAAaC,EAAIQ,IAC1BD,IACR,CAAE,SCjDMM,EAKX,WAAAC,CAAYC,GACVC,KAAKC,OAASF,EAAOE,OACrBD,KAAKE,QAAUH,EAAOG,SAAW,2CAClC,CAEK,OAAAC,CAAWC,oDACf,MAAMC,EAAM,GAAGL,KAAKE,WAAWE,EAAkBE,WAC3CC,EAAU,CACd,eAAgB,mBAChB,CAACV,EAAUW,gBAAiBR,KAAKC,QAE7BF,iBACJM,MACAE,WACGH,GAGL,IACE,MAAMK,QAAiBC,EAAMP,QAAWJ,GACxC,MAAO,CAAEY,KAAM5B,EAAa0B,EAASE,MAAOC,WAAOC,EACpD,CAAC,MAAOD,GACP,MAAME,EAAgBF,EAAMH,SAC5B,GAAIK,EAAe,CAMjB,MAAO,CAAEH,UAAME,EAAWD,MALW,CACnCG,SAA2B,QAAlBC,EAAAF,EAAcH,YAAI,IAAAK,OAAA,EAAAA,EAAED,UAAW,gBACxCE,WAA6B,QAAlBC,EAAAJ,EAAcH,YAAI,IAAAO,OAAA,EAAAA,EAAEC,aAAc,gBAC7CC,YAAaN,EAAcO,QAG9B,CAEC,OADAC,QAAQC,KAAK,cAAeX,EAAMG,SAC3B,CACLJ,UAAME,EACND,MAAO,CAAEG,QAAS,gBAAiBI,WAAY,gBAAiBK,YAAa,KAGlF,IACF,EAvCe3B,EAAcW,eAAG,gBCPnC,MAAMiB,EAAiB,uBAGVC,EAAwC,GAAGD,YAG3CE,EAAuC,GAAGF,kBAG1CG,EAAsC,GAAGH,iBCOzCI,EAGX,WAAA/B,CAAYC,GAIZC,KAAyB8B,0BAAG,IACnBC,QAAQC,OAAO,CACpBjB,QAAS,yBACTE,UAAW,yBACXG,YAAa,MAPfpB,KAAKiC,UAAY,IAAIpC,EAAUE,EAChC,CAUK,wBAAAmC,CAAyB/B,4CAC7B,IACE,MAAMM,QAAiBT,KAAKiC,UAAU9B,QAA0C,CAC9EgC,OAAQ,OACR7B,SAAUoB,EACVf,KAAMR,GAAW,CAAE,IAGrB,OAAIM,EAASG,OACXU,QAAQC,KAAK,oDAAqDd,EAASG,MAAO,KAC3EmB,QAAQC,OAAOvB,EAASG,QAG1BH,EAASE,MAAQ,CAAEyB,MAAO,EAAGzB,KAAM,GAC3C,CAAC,MAAOC,GAEP,OADAU,QAAQC,KAAK,oDAAqDX,EAAO,KAClEmB,QAAQC,OAAOpB,EACvB,IACF,CAEK,qBAAAyB,4CACJ,IACE,IAAIC,EAAO,EACX,MAAMC,EAAO,IACb,IACIC,EADAC,EAAkC,GAGtC,GACED,QAAyBxC,KAAKkC,yBAAyB,CACrDI,KAAMA,IACNC,KAAMA,IAGRE,EAAaA,EAAWC,OAAOF,EAAiB7B,YACzC8B,EAAWE,OAASH,EAAiBJ,OAE9C,OAAOK,CACR,CAAC,MAAO7B,GAEP,MADAU,QAAQV,MAAM,+CAAgDA,GACxDA,CACP,IACF,CAEK,sBAAAgC,CAAuBpD,4CAC3B,IACE,MAAMiB,QAAiBT,KAAKiC,UAAU9B,QAA2B,CAC/DgC,OAAQ,MACR7B,SAAUqB,EACVkB,OAAQ,CAAErD,SAGZ,OAAIiB,EAASG,OACXU,QAAQC,KAAK,kDAAmDd,EAASG,MAAO,KACzEmB,QAAQC,OAAOvB,EAASG,QAG5BH,EAASE,KAIPF,EAASE,KAHPX,KAAK8B,2BAIf,CAAC,MAAOlB,GAEP,OADAU,QAAQC,KAAK,kDAAmDX,EAAO,KAChEmB,QAAQC,OAAOpB,EACvB,IACF,CAEK,mBAAAkC,CAAuB3C,4CAC3B,IACE,MAAMM,QAAiBT,KAAKiC,UAAU9B,QAA4B,CAChEgC,OAAQ,OACR7B,SAAUsB,EACVjB,KAAMR,IAER,OAAIM,EAASG,OACXU,QAAQC,KAAK,iDAAkDd,EAASG,MAAO,KACxEmB,QAAQC,OAAOvB,EAASG,QAG5BH,EAASE,KAIRF,EAASE,KAHNX,KAAK8B,2BAIf,CAAC,MAAOlB,GAEP,OADAU,QAAQC,KAAK,iDAAkDX,EAAO,KAC/DmB,QAAQC,OAAOpB,EACvB,IACF,ECnHI,MAAMmC,EAAmBC,EAAaA,mBAAmCnC,GCwDhF,IAAYoC,EAKAC,EALAD,QAGXA,oBAAA,GAHWA,EAAAA,yBAAAA,QAAAA,eAGX,CAAA,IAFC,GAAA,KACAA,EAAA,IAAA,MAGUC,QAKXA,uBAAA,GALWA,EAAAA,QAAiBA,oBAAjBA,0BAKX,CAAA,IAJC,QAAA,UACAA,EAAA,OAAA,SACAA,EAAA,KAAA,OACAA,EAAA,OAAA,6DChDiE,EAAGC,WAAUC,eAAcC,qBAE5F,MAAMC,EAZ0B,CAACF,GACQ,IAAIvB,EAAgB,CAC3D5B,OAAQmD,EAAanD,OACrBC,QAASkD,EAAalD,SAAW,8CASMqD,CAA0BH,IAE5DI,EAAcC,GAAmBC,EAAQA,SAAsB,CAAE,GAElEC,EAAiB,CAAOnE,EAAaoE,IAA4CC,OAAA,OAAA,OAAA,GAAA,YACrF,aAAaP,EAAgBR,oBAAoB,CAAEtD,MAAKoE,WAC1D,IAMME,EAAuB,CAC3BtE,EACAuE,EACAH,OAA2C/C,EAC3CmD,GAA6B,IACaH,OAAA,OAAA,OAAA,GAAA,kBAC1C,IACE,MAAMI,EAAiBL,QAAAA,EAAYI,EAAoBX,EAAiB,CAAA,EAClEa,QAAkBP,EAAenE,EAAKyE,GAC5C,MAAO,CACLzE,IAAKA,EACL2E,gBAAOD,EAAUC,MAAMC,6BACvBC,OAAQ,CAAE,EAEb,CAAC,MAAOC,GAEP,OADAhD,QAAQC,KAAK,yCAA0C+C,GAChD,CACL9E,IAAKA,EACL2E,MAAOJ,EACPM,OAAQ,CAAE,EAEb,CACH,IAEME,EAAsB,CAC1B/E,EACAuE,EACAH,OAA2C/C,EAC3CmD,GAA6B,IACYH,OAAA,OAAA,OAAA,GAAA,oBACzC,IACE,MAAMI,EAAiBL,QAAAA,EAAYI,EAAoBX,EAAiB,CAAA,EAClEa,QAAkBP,EAAenE,EAAKyE,GAC5C,MAAO,CACLzE,IAAKA,EACL2E,cAAOK,EAAyB,QAAzBtD,EAAAgD,EAAUC,MAAMM,iBAAS,IAAAvD,EAAAA,EAAIgD,EAAUC,MAAMO,2BAAe,EACnEL,OAAQ,CAAE,EAEb,CAAC,MAAOC,GAEP,OADAhD,QAAQC,KAAK,wCAAyC+C,GAC/C,CACL9E,IAAKA,EACL2E,MAAOJ,EACPM,OAAQ,CAAE,EAEb,CACH,IAEMM,EAAsB,CAC1BnF,EACAuE,EACAH,OAA2C/C,EAC3CmD,GAA6B,IACYH,OAAA,OAAA,OAAA,GAAA,kBACzC,IACE,MAAMI,EAAiBL,QAAAA,EAAYI,EAAoBX,EAAiB,CAAA,EAClEa,QAAkBP,EAAenE,EAAKyE,GAC5C,MAAO,CACLzE,IAAKA,EACL2E,gBAAOD,EAAUC,MAAMS,2BAAe,GACtCP,OAAQ,CAAE,EAEb,CAAC,MAAOC,GAEP,OADAhD,QAAQC,KAAK,wCAAyC+C,GAC/C,CACL9E,IAAKA,EACL2E,MAAOJ,EACPM,OAAQ,CAAE,EAEb,CACH,IA4BMQ,EAAwC,CAC5CC,SAvGe,IAAyCjB,OAAA,OAAA,OAAA,GAAA,YACxD,aAAaP,EAAgBjB,uBAC/B,IAsGEyB,uBACAS,sBACAI,sBACAI,gBA/BsB,CAACvF,EAAauE,KACpCP,EAAahE,GAAOuE,EACpBN,EAAgBD,EAAa,EA8B7BwB,eA3BqB,CACrBxF,EACAoE,OAA2C/C,EAC3CmD,GAA6B,IACbH,OAAA,OAAA,OAAA,GAAA,YAChB,MAAME,EAAaP,EAAahE,GAChC,cAAeuE,GACb,IAAK,UAEH,aADyBD,EAAqBtE,EAAKuE,EAAYH,EAASI,IACtDG,MACpB,IAAK,SAEH,aADwBI,EAAoB/E,EAAKuE,EAAYH,EAASI,IACrDG,MAEnB,IAAK,SAEH,aADwBQ,EAAoBnF,EAAKuE,EAAYH,EAASI,IACrDG,MAEvB,KAYA,OAAOc,EAAAC,IAACnC,EAAiBoC,SAAQ,CAAChB,MAAOU,EAAe1B,SAAGA,GAAqC,8BAI/D,KACjC,MAAMS,EAAUwB,aAAWrC,GAC3B,IAAKa,EACH,MAAM,IAAIyB,MAAM,2DAElB,OAAOzB,CAAO"}