{"version":3,"file":"index.js","sources":["../src/main/client/axios.middleware.ts","../src/main/client/api.client.ts","../src/main/client/endpoint.client.ts","../src/main/client/type.client.ts","../src/main/client/index.tsx","../src/main/provider/context.provider.ts","../src/main/util/common.util.ts","../src/main/util/flag.util.ts","../src/main/provider/index.tsx"],"sourcesContent":["import axios from 'axios';\nimport applyCaseMiddleware from 'axios-case-converter';\n\n/**\n * Apply case middleware to convert camelCase to snake_case when receiving response, \n * and vice versa when sending request.\n * @see https://www.npmjs.com/package/axios-case-converter\n */\nexport default applyCaseMiddleware(axios.create());\n","import { AxiosRequestConfig } from 'axios';\nimport { ApiClientInterface, ApiRequestOptions, ApiResponse, ConfigClient, ErrorResponse } from './type.client';\nimport axios from './axios.middleware';\n\nexport class ApiClient implements ApiClientInterface {\n  readonly apiKey: string;\n  readonly baseUrl: string;\n  static readonly API_KEY_HEADER = 'X-NUM-API-KEY';\n\n  constructor(config: ConfigClient) {\n    this.apiKey = config.apiKey;\n    this.baseUrl = config.baseUrl || 'https://service-platform.dev.numerator.io'; //'https://api.numerator.io/v1';\n  }\n\n  async request<T>(apiRequestOptions: ApiRequestOptions): Promise<ApiResponse<T>> {\n    const url = `${this.baseUrl}/${apiRequestOptions.endpoint}`;\n    const headers = {\n      'Content-Type': 'application/json',\n      [ApiClient.API_KEY_HEADER]: this.apiKey,\n    };\n    const config: AxiosRequestConfig = {\n      url,\n      headers,\n      ...apiRequestOptions,\n    };\n\n    try {\n      const response = await axios.request<T>(config);\n      return { data: response.data, error: undefined };\n    } catch (error: Error | any) {\n      const axiosResponse = error.response;\n      if (axiosResponse) {\n        const errorResponse: ErrorResponse = {\n          message: axiosResponse.data?.message || 'Unknown Error',\n          errorCode: axiosResponse.data?.errorCode || 'unknown_error',\n          errorStatus: axiosResponse.status,\n        };\n        return { data: undefined, error: errorResponse };\n      } else {\n        console.warn('AxiosError:', error.message);\n        return {\n          data: undefined,\n          error: { message: 'Unknown Error', errorCode: 'unknown_error', httpStatus: 500 },\n        };\n      }\n    }\n  }\n}\n\nexport default ApiClient;\n","const END_POINT_BASE = 'api/sdk/feature-flag';\n\n// Get all feature flags config associated with the project\nexport const END_POINT_FEATURE_FLAG_CONFIG_LISTING = `${END_POINT_BASE}/listing`;\n\n// Get the config of a feature flag by key\nexport const END_POINT_FEATURE_FLAG_CONFIG_BY_KEY = `${END_POINT_BASE}/detail-by-key`;\n\n// Get the value of the feature flag by key\nexport const END_POINT_FEATURE_FLAG_VALUE_BY_KEY = `${END_POINT_BASE}/by-key`;\n","import { AxiosRequestConfig } from 'axios';\n\n// --- Types for ConfigClient --- //\nexport type ConfigClient = {\n  apiKey: string;\n  baseUrl?: string;\n};\n\n// --- Types for ApiClient --- //\nexport interface ErrorResponse {\n  message: string;\n  errorCode: string;\n  errorStatus: number;\n}\n\nexport interface ApiResponse<T> {\n  data?: T;\n  error?: ErrorResponse | any;\n}\n\nexport interface ApiRequestOptions extends AxiosRequestConfig {\n  endpoint: string;\n}\n\nexport interface ApiClientInterface {\n  apiKey: string;\n  baseUrl: string;\n\n  request<T>(apiRequestOptions: ApiRequestOptions): Promise<ApiResponse<T>>;\n}\n\n// --- Types for Request/ Response --- //\nexport interface PaginationRequest {\n  page?: number;\n  size?: number;\n}\n\nexport interface PaginationResponse<T> {\n  count: number;\n  data: T[];\n}\n\nexport interface FeatureFlagConfigListingRequest extends PaginationRequest {\n  page?: number;\n  size?: number;\n}\n\nexport interface FeatureFlagValueByKeyRequest {\n  key: string;\n  context?: Record<string, any>;\n}\n\nexport interface FeatureFlagConfigListingResponse extends PaginationResponse<FeatureFlagConfig> {\n  count: number;\n  data: FeatureFlagConfig[];\n}\n\n// --- Types for Feature Flag --- //\nexport type VariationKeyType = 'stringValue' | 'booleanValue' | 'longValue' | 'doubleValue';\n\nexport enum FlagStatusEnum {\n  ON = 'ON',\n  OFF = 'OFF',\n}\n\nexport enum FlagValueTypeEnum {\n  BOOLEAN = 'BOOLEAN',\n  STRING = 'STRING',\n  LONG = 'LONG',\n  DOUBLE = 'DOUBLE',\n}\n\nexport interface FeatureFlagConfig {\n  id: string;\n  name: string;\n  key: string;\n  organizationId: string;\n  projectId: string;\n  status: FlagStatusEnum;\n  description?: string | null;\n  defaultOnVariationId: string;\n  defaultOffVariationId: string;\n  valueType: FlagValueTypeEnum;\n  createdAt: Date;\n}\n\nexport interface FeatureFlagValue<T> {\n  key: string;\n  status: FlagStatusEnum;\n  value: T;\n  valueType: FlagValueTypeEnum;\n}\n\nexport interface VariationValue {\n  stringValue?: string;\n  booleanValue?: boolean;\n  longValue?: number;\n  doubleValue?: number;\n}\n","import { ApiClient } from './api.client';\nimport {\n  END_POINT_FEATURE_FLAG_CONFIG_BY_KEY,\n  END_POINT_FEATURE_FLAG_CONFIG_LISTING,\n  END_POINT_FEATURE_FLAG_VALUE_BY_KEY,\n} from './endpoint.client';\nimport {\n  ConfigClient,\n  ErrorResponse,\n  FeatureFlagConfig,\n  FeatureFlagConfigListingRequest,\n  FeatureFlagConfigListingResponse,\n  FeatureFlagValue,\n  FeatureFlagValueByKeyRequest,\n  FlagValueTypeEnum,\n  VariationKeyType,\n  VariationValue,\n} from './type.client';\n\nexport class NumeratorClient {\n  private apiClient: ApiClient;\n\n  constructor(config: ConfigClient) {\n    this.apiClient = new ApiClient(config);\n  }\n\n  handleFeatureFlagNotFound = (): Promise<never> => {\n    return Promise.reject({\n      message: 'Feature Flag not found',\n      errorCode: 'FEATURE_FLAG_NOT_FOUND',\n      errorStatus: 404,\n    } as ErrorResponse);\n  };\n\n  async featureFlagConfigListing(request?: FeatureFlagConfigListingRequest): Promise<FeatureFlagConfigListingResponse> {\n    try {\n      const response = await this.apiClient.request<FeatureFlagConfigListingResponse>({\n        method: 'POST',\n        endpoint: END_POINT_FEATURE_FLAG_CONFIG_LISTING,\n        data: request || {},\n      });\n\n      if (response.error) {\n        console.warn('Error fetching featureFlagConfigListing due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      return response.data || { count: 0, data: [] };\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagConfigListing due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n\n  async allFeatureFlagsConfig(): Promise<FeatureFlagConfig[]> {\n    try {\n      let page = 0;\n      const size = 200;\n      let allConfigs: FeatureFlagConfig[] = [];\n      let configListingRes: FeatureFlagConfigListingResponse;\n\n      do {\n        configListingRes = await this.featureFlagConfigListing({\n          page: page++,\n          size: size,\n        });\n\n        allConfigs = allConfigs.concat(configListingRes.data);\n      } while (allConfigs.length < configListingRes.count);\n\n      return allConfigs;\n    } catch (error) {\n      console.error('Error fetching allFeatureFlagsConfig due to:', error);\n      throw error;\n    }\n  }\n\n  async featureFlagConfigByKey(key: string): Promise<FeatureFlagConfig> {\n    try {\n      const response = await this.apiClient.request<FeatureFlagConfig>({\n        method: 'GET',\n        endpoint: END_POINT_FEATURE_FLAG_CONFIG_BY_KEY,\n        params: { key },\n      });\n\n      if (response.error) {\n        console.warn('Error fetching featureFlagConfigByKey due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      if (!response.data) {\n        return this.handleFeatureFlagNotFound();\n      }\n\n      return response.data;\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagConfigByKey due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n\n  async featureFlagValueByKey<T>(request: FeatureFlagValueByKeyRequest): Promise<FeatureFlagValue<T>> {\n    try {\n      const response = await this.apiClient.request<FeatureFlagValue<T>>({\n        method: 'POST',\n        endpoint: END_POINT_FEATURE_FLAG_VALUE_BY_KEY,\n        data: request,\n      });\n      if (response.error) {\n        console.warn('Error fetching featureFlagValueByKey due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      if (!response.data) {\n        return this.handleFeatureFlagNotFound();\n      }\n\n      let typeKey: VariationKeyType;\n      switch (response.data?.valueType) {\n        case FlagValueTypeEnum.STRING:\n          typeKey = 'stringValue';\n          break;\n        case FlagValueTypeEnum.LONG:\n          typeKey = 'longValue';\n          break;\n        case FlagValueTypeEnum.DOUBLE:\n          typeKey = 'doubleValue';\n          break;\n        case FlagValueTypeEnum.BOOLEAN:\n          typeKey = 'booleanValue';\n          break;\n        default:\n          throw new Error('cannot cast type data');\n      }\n  \n      const newValue = (response.data?.value as VariationValue)[typeKey] as T;\n\n      if (!newValue) {\n        throw new Error('Cannot cast data');\n      }\n\n      const newResponse = { ...response.data, value: newValue };\n      return newResponse;\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagValueByKey due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n}\n\nexport default NumeratorClient;\n","import { createContext } from 'react';\nimport { NumeratorContextType } from './type.provider';\n\n// Create a context for the SDK\nexport const NumeratorContext = createContext<NumeratorContextType | undefined>(undefined);\n","/**\n * Deep copy an object using JSON.\n * @param obj - The object to be deep copied.\n * @returns A deep copy of the input object.\n */\nexport const deepCopy = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\n/**\n * Asynchronous sleep function using Promises.\n * @param milliseconds - The duration to sleep in milliseconds.\n * @returns A Promise that resolves after the specified duration.\n */\nexport const sleep = (milliseconds: number) => new Promise((resolve) => setTimeout(resolve, milliseconds));\n\n/**\n * Map an array of objects to a Record using a specific key.\n * @param array - The array of objects to be mapped.\n * @returns A Record where keys are extracted from the 'key' property of each object.\n */\nexport const mapArrayToRecord = <T extends { key: string }>(array: T[]): Record<string, T> => {\n  return Object.fromEntries(array.map((item) => [item.key, item]));\n};\n\n/**\n * Create a promise with a timeout.\n * @param promise - The original promise to be wrapped with a timeout.\n * @param timeout - The timeout duration in milliseconds.\n * @returns A Promise that resolves when the original promise resolves or rejects with a timeout error.\n */\nexport const withTimeout = <T>(promise: Promise<T>, timeout: number): Promise<T> => {\n  const timeoutPromise = new Promise<T>((_, reject) =>\n    setTimeout(() => reject(new Error('Operation timed out')), timeout),\n  );\n  return Promise.race([promise, timeoutPromise]);\n};\n","import React from 'react';\nimport { FeatureFlagValue, FlagStatusEnum } from '../client/type.client';\n\n/**\n * Check if a feature flag is ON.\n * @param featureFlagsValue - The record of feature flags and their values.\n * @param key - The key of the feature flag to check.\n * @returns True if the feature flag is ON, false otherwise.\n */\nexport const flagIsOn = (featureFlagsValue: Record<string, FeatureFlagValue<any>>, key: string): boolean => {\n  return featureFlagsValue[key]?.status === FlagStatusEnum.ON;\n};\n\n/**\n * Check if a feature flag is OFF.\n * @param featureFlagsValue - The record of feature flags and their values.\n * @param key - The key of the feature flag to check.\n * @returns True if the feature flag is OFF, false otherwise.\n */\nexport const flagIsOff = (featureFlagsValue: Record<string, FeatureFlagValue<any>>, key: string): boolean => {\n  const flag = featureFlagsValue[key];\n  return !flag || flag?.status === FlagStatusEnum.OFF;\n};\n\n/**\n * Check if a feature flag's value equals a specified value.\n * @param featureFlagsValue - The record of feature flags and their values.\n * @param key - The key of the feature flag to check.\n * @param value - The value to compare with the feature flag's value.\n * @returns True if the feature flag's value equals the specified value, false otherwise.\n */\nexport const flagEqualsValue = (\n  featureFlagsValue: Record<string, FeatureFlagValue<any>>,\n  key: string,\n  value: any,\n): boolean => {\n  return featureFlagsValue[key]?.value === value;\n};\n\n/**\n * Check if a feature flag is ON and should render a React component.\n * @param featureFlagsValue - The record of feature flags and their values.\n * @param key - The key of the feature flag to check.\n * @param onComponent - The React component to render if the feature flag is ON.\n * @returns The specified React component if the feature flag is ON, otherwise an empty element.\n */\nexport const flagIsOnShouldRenderComponent = (featureFlagsValue: Record<string, FeatureFlagValue<any>>, key: string, onComponent: React.ReactElement): React.ReactElement => {\n  return featureFlagsValue[key]?.status === FlagStatusEnum.ON ? onComponent : React.createElement(React.Fragment);;\n}\n\n/**\n * Renders the specified React component if the feature flag with the given key is in the \"OFF\" state.\n * Otherwise, it renders an empty fragment. If the feature flag is undefined, it also renders an empty fragment.\n * @param featureFlagsValue - The record of feature flag values.\n * @param key - The key of the feature flag to check.\n * @param offComponent - The React component to render when the feature flag is in the \"OFF\" state.\n * @returns The rendered React component or an empty fragment.\n */\nexport const flagIsOffShouldRenderComponent = (\n  featureFlagsValue: Record<string, FeatureFlagValue<any>>,\n  key: string,\n  offComponent: React.ReactElement\n): React.ReactElement => {\n  const flag = featureFlagsValue[key];\n\n  // Check if the feature flag is explicitly set to \"OFF\" or if it's undefined\n  if (!flag || flag.status === FlagStatusEnum.OFF) {\n    return offComponent;\n  }\n\n  // Render an empty fragment if the feature flag is not in the \"OFF\" state\n  return React.createElement(React.Fragment);\n}\n\n/**\n * Renders the specified React component if the value of the feature flag with the given key\n * matches the provided value. Otherwise, it renders an empty fragment.\n * If the feature flag is undefined, it also renders an empty fragment.\n * @param featureFlagsValue - The record of feature flag values.\n * @param key - The key of the feature flag to check.\n * @param value - The value to compare against.\n * @param renderComponent - The React component to render when the feature flag value matches the provided value.\n * @returns The rendered React component or an empty fragment.\n */\nexport const flagEqualsValueShouldRenderComponent = (\n  featureFlagsValue: Record<string, FeatureFlagValue<any>>,\n  key: string,\n  value: any,\n  renderComponent: React.ReactElement\n): React.ReactElement => {\n  const flag = featureFlagsValue[key];\n\n  // Check if the feature flag value matches the provided value or if it's undefined\n  if (flag && flag.value === value) {\n    return renderComponent;\n  }\n\n  // Render an empty fragment if the feature flag value doesn't match the provided value or if it's undefined\n  return React.createElement(React.Fragment);\n}\n\n/**\n * Executes the provided callback if the value of the feature flag with the given key is ON.\n * If the feature flag is undefined or its value is not ON, the callback is not executed.\n * @param featureFlagsValue - The record of feature flag values.\n * @param key - The key of the feature flag to check.\n * @param onCallback - The callback function to execute when the feature flag value is ON.\n */\nexport const flagIsOnShouldCallback = (\n  featureFlagsValue: Record<string, FeatureFlagValue<any>>,\n  key: string,\n  onCallback: () => void\n): void => {\n  // Check if the feature flag value is ON\n  const isOn = featureFlagsValue[key]?.status === FlagStatusEnum.ON;\n\n  // Execute the callback if the feature flag value is ON and the callback is provided\n  if (isOn && onCallback) {\n    onCallback();\n  }\n}\n\n/**\n * Executes the provided callback if the value of the feature flag with the given key is OFF.\n * If the feature flag is undefined or its value is not OFF, the callback is not executed.\n * @param featureFlagsValue - The record of feature flag values.\n * @param key - The key of the feature flag to check.\n * @param offCallback - The callback function to execute when the feature flag value is OFF.\n */\nexport const flagIsOffShouldCallback = (\n  featureFlagsValue: Record<string, FeatureFlagValue<any>>,\n  key: string,\n  offCallback: () => void\n): void => {\n  // Check if the feature flag value is OFF\n  const isOff = !featureFlagsValue[key] || featureFlagsValue[key]?.status === FlagStatusEnum.OFF;\n\n  // Execute the callback if the feature flag value is OFF and the callback is provided\n  if (isOff && offCallback) {\n    offCallback();\n  }\n}\n\n/**\n * Executes the provided callback if the value of the feature flag with the given key equals the specified value.\n * If the feature flag is undefined or its value does not equal the specified value, the callback is not executed.\n * @param featureFlagsValue - The record of feature flag values.\n * @param key - The key of the feature flag to check.\n * @param value - The value to compare with the feature flag's value.\n * @param equalsCallback - The callback function to execute when the feature flag value equals the specified value.\n */\nexport const flagEqualsValueShouldCallback = (\n  featureFlagsValue: Record<string, FeatureFlagValue<any>>,\n  key: string,\n  value: any,\n  equalsCallback: () => void\n): void => {\n  // Check if the feature flag value equals the specified value\n  const isEqualsValue = featureFlagsValue[key]?.value === value;\n\n  // Execute the callback if the feature flag value equals the specified value and the callback is provided\n  if (isEqualsValue && equalsCallback) {\n    equalsCallback();\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport NumeratorClient from '../client';\nimport { NumeratorContext } from './context.provider';\nimport { NumeratorContextType, NumeratorProviderProps } from './type.provider';\nimport { mapArrayToRecord } from '../util';\nimport { ConfigClient, FeatureFlagConfig, FeatureFlagValue } from '../client/type.client';\n\nconst initializeNumeratorClient = (configClient: ConfigClient): NumeratorClient => {\n  const numeratorClient: NumeratorClient = new NumeratorClient({\n    apiKey: configClient.apiKey,\n    baseUrl: configClient.baseUrl || 'https://service-platform.dev.numerator.io',\n  });\n\n  return numeratorClient;\n};\n\n// Create a provider component\nexport const NumeratorProvider: React.FC<NumeratorProviderProps> = ({\n  children,\n  configClient,\n  loadAllFlagsConfigOnMount,\n  loadFeatureFlagsValueOnMount,\n}) => {\n  // Initialize the SDK client\n  const numeratorClient: NumeratorClient = initializeNumeratorClient(configClient);\n\n  const [featureFlagsConfig, setFeatureFlagsConfig] = useState<Record<string, FeatureFlagConfig>>({});\n  const [featureFlagsValue, setFeatureFlagsState] = useState<Record<string, FeatureFlagValue<any>>>({});\n\n  const fetchAllFeatureFlagsConfig = async () => {\n    const allFlagsConfig = await numeratorClient.allFeatureFlagsConfig();\n    setFeatureFlagsConfig(mapArrayToRecord(allFlagsConfig));\n  };\n\n  const fetchFeatureFlagConfig = async ({ key }: { key: string }) => {\n    const flagConfigRes = await numeratorClient.featureFlagConfigByKey(key);\n\n    // Update the state directly with the new Record containing a single FeatureFlag\n    setFeatureFlagsConfig((prevFeatureFlagsConfig) => ({\n      ...prevFeatureFlagsConfig,\n      [flagConfigRes.key]: flagConfigRes,\n    }));\n  };\n\n  const fetchFeatureFlagValue = async ({ key, context }: { key: string; context?: Record<string, any> }) => {\n    const flagValueRes = await numeratorClient.featureFlagValueByKey({ key: key, context });\n\n    // Update the state directly with the new Record containing a single FeatureFlagState\n    setFeatureFlagsState((prevFeatureFlagsValue) => ({\n      ...prevFeatureFlagsValue,\n      [flagValueRes.key]: flagValueRes,\n    }));\n  };\n\n  // Create an object with SDK methods and state to be shared\n  const sdkContextValue: NumeratorContextType = {\n    featureFlagsConfig,\n    featureFlagsValue,\n    fetchAllFeatureFlagsConfig,\n    fetchFeatureFlagConfig,\n    fetchFeatureFlagValue,\n  };\n\n  useEffect(() => {\n    if (loadAllFlagsConfigOnMount) {\n      fetchAllFeatureFlagsConfig();\n    }\n\n    if (loadFeatureFlagsValueOnMount && Object.keys(loadFeatureFlagsValueOnMount).length > 0) {\n      Object.keys(loadFeatureFlagsValueOnMount).forEach((key) => {\n        fetchFeatureFlagValue({ key, context: loadFeatureFlagsValueOnMount[key] });\n      });\n    }\n  }, []);\n\n  return <NumeratorContext.Provider value={sdkContextValue}>{children}</NumeratorContext.Provider>;\n};\n\n// Custom hook to access the SDK context value\nexport const useNumeratorContext = () => {\n  const context = useContext(NumeratorContext);\n  if (!context) {\n    throw new Error('NumeratorClient must be used within a NumeratorProvider');\n  }\n  return context;\n};\n"],"names":["axios","FlagStatusEnum","FlagValueTypeEnum","createContext","useState","useEffect","_jsx","useContext"],"mappings":"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"}