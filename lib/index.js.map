{"version":3,"file":"index.js","sources":["../src/main/util/common.util.ts","../src/main/client/api.client.ts","../src/main/client/endpoint.client.ts","../src/main/client/index.ts","../src/main/provider/context.provider.ts","../src/main/provider/useDefaultContext.ts","../src/main/provider/index.tsx","../src/main/client/type.client.ts","../src/main/jest-mock/index.ts"],"sourcesContent":["/**\n * Deep copy an object using JSON.\n * @param obj - The object to be deep copied.\n * @returns A deep copy of the input object.\n */\nexport const deepCopy = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\n/**\n * Asynchronous sleep function using Promises.\n * @param milliseconds - The duration to sleep in milliseconds.\n * @returns A Promise that resolves after the specified duration.\n */\nexport const sleep = (milliseconds: number) => new Promise((resolve) => setTimeout(resolve, milliseconds));\n\n/**\n * Map an array of objects to a Record using a specific key.\n * @param array - The array of objects to be mapped.\n * @returns A Record where keys are extracted from the 'key' property of each object.\n */\nexport const mapArrayToRecord = <T extends { key: string }>(array: T[]): Record<string, T> => {\n  return Object.fromEntries(array.map((item) => [item.key, item]));\n};\n\n/**\n * Create a promise with a timeout.\n * @param promise - The original promise to be wrapped with a timeout.\n * @param timeout - The timeout duration in milliseconds.\n * @returns A Promise that resolves when the original promise resolves or rejects with a timeout error.\n */\nexport const withTimeout = <T>(promise: Promise<T>, timeout: number): Promise<T> => {\n  const timeoutPromise = new Promise<T>((_, reject) =>\n    setTimeout(() => reject(new Error('Operation timed out')), timeout),\n  );\n  return Promise.race([promise, timeoutPromise]);\n};\n/**\n * Convert snakecase object to camelcase object.\n * @param obj - The original object.\n * @returns A Promise that return camel object.\n */\nexport const snakeToCamel = (obj: any): any => {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(snakeToCamel);\n  }\n\n  return Object.keys(obj).reduce((acc: any, key: string) => {\n    const camelKey = key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\n    acc[camelKey] = snakeToCamel(obj[key]);\n    return acc;\n  }, {});\n};\n\n/**\n * Add records to another records\n * @param firstObject - The first records object.\n * @param secondObject  _ the second records object.\n */\nexport const areObjectsEqual = (firstObject?: Record<string, any>, secondObject?: Record<string, any>): boolean => {\n  if(!firstObject || !secondObject) return false\n  // Check if the number of keys are equal\n  const keys1 = Object.keys(firstObject);\n  const keys2 = Object.keys(secondObject);\n  if (keys1.length !== keys2.length) {\n      return false;\n  }\n\n  // Check if each key-value pair matches\n  for (const key of keys1) {\n      // Check if the key exists in both objects\n      if (!(key in secondObject)) {\n          return false;\n      }\n\n      // Check if the values are equal\n      const value1 = firstObject[key];\n      const value2 = secondObject[key];\n      if (value1 !== value2) {\n          // If the values are objects, recursively check them\n          if (typeof value1 === 'object' && typeof value2 === 'object') {\n              if (!areObjectsEqual(value1, value2)) {\n                  return false;\n              }\n          } else {\n              return false;\n          }\n      }\n  }\n\n  return true;\n}\n","import { snakeToCamel } from '@/util';\nimport { ApiRequestOptions, ApiResponse, ConfigClient } from '@/client/type.client';\n\nexport class ApiClient {\n  readonly apiKey: string;\n  readonly baseUrl: string;\n  static readonly API_KEY_HEADER = 'X-NUM-API-KEY';\n\n  constructor(config: ConfigClient) {\n    this.apiKey = config.apiKey;\n    this.baseUrl = config.baseUrl || 'https://service-platform.numerator.io'; //'https://api.numerator.io/v1';\n  }\n\n  async request<T>(apiRequestOptions: ApiRequestOptions): Promise<ApiResponse<T>> {\n    const { method, endpoint, data, headers: headerRequest } = apiRequestOptions;\n    const url = `${this.baseUrl}/${endpoint}`;\n    const headers = {\n      'Content-Type': 'application/json',\n      [ApiClient.API_KEY_HEADER]: this.apiKey,\n      ...headerRequest,\n    };\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers,\n        body: JSON.stringify(data),\n      });\n\n      // Handle 304 Not Modified response\n      if (response.status === 304) {\n        return {};\n      }\n\n      // Check if the request was successful\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const jsonData = await response.json();\n      return { data: snakeToCamel(jsonData), error: undefined, headers: response.headers };\n    } catch (error: Error | any) {\n      return { data: undefined, error };\n    }\n  }\n}\n\nexport default ApiClient;\n","const END_POINT_BASE = 'api/v1/sdk/feature-flag';\n\n// Get all feature flags config associated with the project\nexport const END_POINT_FEATURE_FLAG_CONFIG_LISTING = `${END_POINT_BASE}/listing`;\n\n// Get the config of a feature flag by key\nexport const END_POINT_FEATURE_FLAG_CONFIG_BY_KEY = `${END_POINT_BASE}/detail-by-key`;\n\n// Get the value of the feature flag by key\nexport const END_POINT_FEATURE_FLAG_VALUE_BY_KEY = `${END_POINT_BASE}/by-key`;\n\n// Get the value of flag collection by context\nexport const END_POINT_FEATURE_FLAG_COLLECTION_POLLING = `${END_POINT_BASE}/polling`;\n","import { ApiClient } from '@/client/api.client';\nimport {\n  END_POINT_FEATURE_FLAG_COLLECTION_POLLING,\n  END_POINT_FEATURE_FLAG_CONFIG_BY_KEY,\n  END_POINT_FEATURE_FLAG_CONFIG_LISTING,\n  END_POINT_FEATURE_FLAG_VALUE_BY_KEY,\n} from '@/client/endpoint.client';\nimport {\n  ConfigClient,\n  ErrorResponse,\n  FeatureFlagConfig,\n  FeatureFlagConfigListingRequest,\n  FeatureFlagConfigListingResponse,\n  FeatureFlagPollingResponse,\n  FeatureFlagValueByKeyRequest,\n  FlagCollection,\n  FlagVariationValue,\n} from '@/client/type.client';\n\nexport class NumeratorClient {\n  private apiClient: ApiClient;\n\n  constructor(config: ConfigClient) {\n    this.apiClient = new ApiClient(config);\n  }\n\n  handleFeatureFlagNotFound = (): Promise<never> => {\n    return Promise.reject({\n      message: 'Feature Flag not found',\n      errorCode: 'FEATURE_FLAG_NOT_FOUND',\n      errorStatus: 404,\n    } as ErrorResponse);\n  };\n\n  async featureFlagConfigListing(request?: FeatureFlagConfigListingRequest): Promise<FeatureFlagConfigListingResponse> {\n    try {\n      const response = await this.apiClient.request<FeatureFlagConfigListingResponse>({\n        method: 'POST',\n        endpoint: END_POINT_FEATURE_FLAG_CONFIG_LISTING,\n        data: request || {},\n      });\n\n      if (response.error) {\n        console.warn('Error fetching featureFlagConfigListing due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      return response.data || { count: 0, data: [] };\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagConfigListing due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n\n  async allFeatureFlagsConfig(): Promise<FeatureFlagConfig[]> {\n    try {\n      let page = 0;\n      const size = 200;\n      let allConfigs: FeatureFlagConfig[] = [];\n      let configListingRes: FeatureFlagConfigListingResponse;\n\n      do {\n        configListingRes = await this.featureFlagConfigListing({\n          page: page++,\n          size: size,\n        });\n\n        allConfigs = allConfigs.concat(configListingRes.data);\n      } while (allConfigs.length < configListingRes.count);\n\n      return allConfigs;\n    } catch (error) {\n      console.error('Error fetching allFeatureFlagsConfig due to:', error);\n      throw error;\n    }\n  }\n\n  async featureFlagConfigByKey(key: string): Promise<FeatureFlagConfig> {\n    try {\n      const url = `${END_POINT_FEATURE_FLAG_CONFIG_BY_KEY}?key=${key}`;\n      const response = await this.apiClient.request<FeatureFlagConfig>({\n        method: 'GET',\n        endpoint: url,\n      });\n\n      if (response.error) {\n        console.warn('Error fetching featureFlagConfigByKey due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      if (!response.data) {\n        return this.handleFeatureFlagNotFound();\n      }\n\n      return response.data;\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagConfigByKey due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n\n  async getFeatureFlagByKey<T>(request: FeatureFlagValueByKeyRequest): Promise<FlagVariationValue> {\n    try {\n      const response = await this.apiClient.request<FlagVariationValue>({\n        method: 'POST',\n        endpoint: END_POINT_FEATURE_FLAG_VALUE_BY_KEY,\n        data: request,\n      });\n      if (response.error) {\n        console.warn('Error fetching featureFlagValueByKey due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      if (!response.data) {\n        return this.handleFeatureFlagNotFound();\n      }\n\n      return response.data;\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagValueByKey due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n\n  async fetchPollingFlag(context: Record<string, any>, eTag?: string | undefined): Promise<FeatureFlagPollingResponse> {\n    try {\n      const headers = !!eTag ? { 'If-None-Match': eTag } : {};\n      const response = await this.apiClient.request<{ flags: FlagCollection[] }>({\n        method: 'POST',\n        headers: headers,\n        endpoint: END_POINT_FEATURE_FLAG_COLLECTION_POLLING,\n        data: { context },\n      });\n\n      if (response.error) {\n        console.warn('Error fetching featureFlagCollectionPolling due to: [', response.error, ']');\n        return Promise.reject(response.error as ErrorResponse);\n      }\n\n      return { flags: response.data?.flags, etag: response.headers.get('ETag') };\n    } catch (error: any) {\n      console.warn('Error fetching featureFlagCollectionPolling due to: [', error, ']');\n      return Promise.reject(error);\n    }\n  }\n}\n\nexport default NumeratorClient;\n","import { createContext } from 'react';\nimport { NumeratorContextType } from '@/provider/type.provider';\n\n// Create a context for the SDK\nexport const NumeratorContext = createContext<NumeratorContextType | undefined>(undefined);\n","export function useDefaultContext(context: Record<string, any>, setContext: React.Dispatch<React.SetStateAction<Record<string, any>>>) {\n\n    const getDefaultContext = (): Record<string, any> => {\n        return context\n      }\n    \n      const clearDefaultContext = () => {\n        setContext({})\n      }\n    \n      const addDefaultContextValue = (key:string, value: any) => {\n        const updatedContext = {...context}\n        updatedContext[key] = value\n        setContext(updatedContext)\n      }\n    \n      const removeDefaultContextValue = (key:string) => {\n        const updatedContext = {...context}\n        delete updatedContext[key]\n      setContext(updatedContext)\n      }\n\n      return {\n        getDefaultContext,\n        clearDefaultContext,\n        addDefaultContextValue,\n        removeDefaultContextValue\n      }\n}","import React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\n\nimport NumeratorClient from '@/client';\nimport {\n  ConfigClient,\n  FeatureFlagConfig,\n  FlagCollection,\n  FlagEvaluationDetail,\n  FlagVariationValue,\n} from '@/client/type.client';\nimport { areObjectsEqual } from '@/util';\nimport { NumeratorContext } from '@/provider/context.provider';\nimport {\n  FlagUpdatedCallback,\n  FlagUpdatedErrorCallback,\n  NumeratorContextType,\n  NumeratorProviderProps,\n} from '@/provider/type.provider';\nimport { useDefaultContext } from '@/provider/useDefaultContext';\n\nconst POLLING_INTERVAL = 30000; // 30 seconds\n\nconst initializeNumeratorClient = (configClient: ConfigClient): NumeratorClient => {\n  const numeratorClient: NumeratorClient = new NumeratorClient({\n    apiKey: configClient.apiKey,\n    baseUrl: configClient.baseUrl || 'https://service-platform.numerator.io',\n    pollingInterval: configClient.pollingInterval || POLLING_INTERVAL,\n  });\n\n  return numeratorClient;\n};\n\n// Create a provider component\nexport const NumeratorProvider: React.FC<NumeratorProviderProps> = ({\n  children,\n  configClient,\n  defaultContext,\n  loadPolling = true,\n}) => {\n  // Initialize the SDK client\n  const numeratorClient: NumeratorClient = initializeNumeratorClient(configClient);\n  const [cacheFlags, setCacheFlags] = useState<Record<string, FlagCollection>>({});\n  const [flags, setFlags] = useState<Record<string, any>>({});\n  const [defaultContextValues, setDefaultContextValues] = useState(defaultContext);\n  const [currentEtag, setCurrentEtag] = useState<string>();\n  const [isPolling, setIsPolling] = useState(loadPolling);\n  const [updateListeners, setUpdateListeners] = useState<FlagUpdatedCallback[]>([]);\n  const [errorListeners, setErrorListeners] = useState<FlagUpdatedErrorCallback[]>([]);\n\n  const fetchPollingFeatureFlag = useCallback(async () => {\n    try {\n      const result = await numeratorClient.fetchPollingFlag(defaultContextValues, currentEtag);\n      if (result.flags) {\n        // 200 OK\n        setCurrentEtag(result.etag);\n        const newCache = result.flags.reduce(\n          (acc, flag) => {\n            acc[flag.key] = flag;\n            return acc;\n          },\n          {} as Record<string, any>,\n        );\n        setCacheFlags(newCache);\n        updateListeners.forEach((listener) => listener(newCache)); // Notify all update listeners\n      } else {\n        // 304 NOT MODIFIED\n        updateListeners.forEach((listener) => listener(cacheFlags)); // Notify all update listeners\n      }\n    } catch (error) {\n      errorListeners.forEach((listener) => listener(cacheFlags, error)); // Notify all error listeners\n    }\n  }, [numeratorClient, defaultContextValues, currentEtag, updateListeners, errorListeners]);\n\n  const flagValueByKey = async (key: string, context: Record<string, any> | undefined): Promise<FlagVariationValue> => {\n    const result = await numeratorClient.getFeatureFlagByKey({ key, context });\n    return result;\n  };\n\n  const featureFlags = async (): Promise<FeatureFlagConfig[]> => {\n    const allFlagsConfig = await numeratorClient.allFeatureFlagsConfig();\n    return allFlagsConfig;\n  };\n\n  const booleanFlagVariationDetail = async (\n    key: string,\n    defaultVal: boolean,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<FlagEvaluationDetail<boolean>> => {\n    try {\n      const requestContext = context ?? (useDefaultContext ? defaultContext : {});\n      const variation = await flagValueByKey(key, requestContext);\n      return {\n        key: key,\n        value: variation.value.booleanValue ?? false,\n        reason: {},\n      };\n    } catch (e) {\n      return {\n        key: key,\n        value: defaultVal,\n        reason: {},\n      };\n    }\n  };\n\n  const numberFlagVariationDetail = async (\n    key: string,\n    defaultVal: number,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<FlagEvaluationDetail<number>> => {\n    try {\n      const requestContext = context ?? (useDefaultContext ? defaultContext : {});\n      const variation = await flagValueByKey(key, requestContext);\n      return {\n        key: key,\n        value: variation.value.longValue ?? variation.value.doubleValue ?? 0,\n        reason: {},\n      };\n    } catch (e) {\n      return {\n        key: key,\n        value: defaultVal,\n        reason: {},\n      };\n    }\n  };\n\n  const stringFlagVariationDetail = async (\n    key: string,\n    defaultVal: string,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<FlagEvaluationDetail<string>> => {\n    try {\n      const requestContext = context ?? (useDefaultContext ? defaultContext : {});\n      const variation = await flagValueByKey(key, requestContext);\n      return {\n        key: key,\n        value: variation.value.stringValue ?? '',\n        reason: {},\n      };\n    } catch (e) {\n      return {\n        key: key,\n        value: defaultVal,\n        reason: {},\n      };\n    }\n  };\n\n  const initFeatureFlag = (key: string, defaultVal: any) => {\n    setFlags((prevFlags) => ({\n      ...prevFlags,\n      [key]: defaultVal,\n    }));\n  };\n\n  const getFeatureFlag = async (\n    key: string,\n    defaultVal: any,\n    context: Record<string, any> | undefined = undefined,\n    useDefaultContext: boolean = true,\n  ): Promise<any> => {\n    const defaultValue = flags[key];\n    const hasCacheValue = !!context && cacheFlags.hasOwnProperty(key) && areObjectsEqual(context, defaultContext);\n    switch (typeof defaultVal) {\n      case 'boolean':\n        if (hasCacheValue) {\n          return (cacheFlags[key].value.booleanValue as boolean) ?? defaultValue;\n        }\n        const resBoolean = await booleanFlagVariationDetail(key, defaultVal, context, useDefaultContext);\n        return resBoolean.value as boolean;\n      case 'number':\n        if (hasCacheValue) {\n          return cacheFlags[key].value.longValue ?? (cacheFlags[key].value.doubleValue as number) ?? defaultValue;\n        }\n        const resNumber = await numberFlagVariationDetail(key, defaultVal, context, useDefaultContext);\n        return resNumber.value as number;\n\n      case 'string':\n        if (hasCacheValue) {\n          return (cacheFlags[key].value.stringValue as string) ?? defaultValue;\n        }\n        const resString = await stringFlagVariationDetail(key, defaultVal, context, useDefaultContext);\n        return resString.value as string;\n      default:\n        throw Error('Unsupported flag type');\n    }\n  };\n\n  const { getDefaultContext, clearDefaultContext, addDefaultContextValue, removeDefaultContextValue } =\n    useDefaultContext(defaultContextValues, setDefaultContextValues);\n\n  const startPolling = () => {\n    setIsPolling(true);\n  };\n\n  const stopPolling = () => {\n    setIsPolling(false);\n    setCacheFlags({});\n  };\n\n  const restartPolling = useCallback(() => {\n    stopPolling();\n    startPolling();\n  }, [stopPolling, startPolling]);\n\n  // Register and unregister update listeners\n  const handleFlagUpdated = useCallback((callback: FlagUpdatedCallback) => {\n    setUpdateListeners((prev) => [...prev, callback]);\n    return () => setUpdateListeners((prev) => prev.filter((c) => c !== callback));\n  }, []);\n\n  // Register and unregister error listeners\n  const handleFlagUpdatedError = useCallback((callback: FlagUpdatedErrorCallback) => {\n    setErrorListeners((prev) => [...prev, callback]);\n    return () => setErrorListeners((prev) => prev.filter((c) => c !== callback));\n  }, []);\n\n  useEffect(() => {\n    let timeIntervalId: any;\n\n    if (isPolling) {\n      timeIntervalId = setInterval(fetchPollingFeatureFlag, configClient.pollingInterval || POLLING_INTERVAL);\n    } else {\n      clearInterval(timeIntervalId);\n    }\n\n    return () => clearInterval(timeIntervalId);\n  }, [isPolling, fetchPollingFeatureFlag]);\n\n  // Create an object with SDK methods and state to be shared\n  const sdkContextValue: NumeratorContextType = useMemo(\n    () => ({\n      featureFlags,\n      flagValueByKey,\n      booleanFlagVariationDetail,\n      numberFlagVariationDetail,\n      stringFlagVariationDetail,\n      initFeatureFlag,\n      getFeatureFlag,\n      getDefaultContext,\n      clearDefaultContext,\n      addDefaultContextValue,\n      removeDefaultContextValue,\n      startPolling,\n      stopPolling,\n      restartPolling,\n      fetchPollingFeatureFlag,\n      handleFlagUpdated,\n      handleFlagUpdatedError,\n      cacheFlags,\n      isPolling: isPolling,\n    }),\n    [cacheFlags, isPolling],\n  );\n\n  return <NumeratorContext.Provider value={sdkContextValue}>{children}</NumeratorContext.Provider>;\n};\n\n// Custom hook to access the SDK context value\nexport const useNumeratorContext = () => {\n  const context = useContext(NumeratorContext);\n  if (!context) {\n    throw new Error('NumeratorClient must be used within a NumeratorProvider');\n  }\n  return context;\n};\n","// --- Types for ConfigClient --- //\nexport type ConfigClient = {\n  apiKey: string;\n  baseUrl?: string;\n  pollingInterval?: number;\n};\n\n// --- Types for ApiClient --- //\nexport interface ErrorResponse {\n  message: string;\n  errorCode: string;\n  errorStatus: number;\n}\n\nexport interface ApiResponse<T> {\n  data?: T;\n  error?: ErrorResponse | any;\n  headers?: any;\n}\n\nexport interface ApiRequestOptions {\n  endpoint: string;\n  method: string;\n  headers?: Record<string, any>;\n  data?: Record<string, any>;\n\n}\n\nexport interface ApiClientInterface {\n  apiKey: string;\n  baseUrl: string;\n\n  request<T>(apiRequestOptions: ApiRequestOptions): Promise<ApiResponse<T>>;\n}\n\n// --- Types for Request/ Response --- //\nexport interface PaginationRequest {\n  page?: number;\n  size?: number;\n}\n\nexport interface PaginationResponse<T> {\n  count: number;\n  data: T[];\n}\n\nexport interface FeatureFlagConfigListingRequest extends PaginationRequest {\n  page?: number;\n  size?: number;\n}\n\nexport interface FeatureFlagValueByKeyRequest {\n  key: string;\n  context?: Record<string, any>;\n}\n\nexport interface FeatureFlagConfigListingResponse extends PaginationResponse<FeatureFlagConfig> {\n  count: number;\n  data: FeatureFlagConfig[];\n}\n\nexport interface FeatureFlagPollingResponse {\n  flags: FlagCollection[] | undefined,\n  etag: string\n}\n// --- Types for Feature Flag --- //\nexport type VariationKeyType = 'stringValue' | 'booleanValue' | 'longValue' | 'doubleValue';\n\nexport enum FlagStatusEnum {\n  ON = 'ON',\n  OFF = 'OFF',\n}\n\nexport enum FlagValueTypeEnum {\n  BOOLEAN = 'BOOLEAN',\n  STRING = 'STRING',\n  LONG = 'LONG',\n  DOUBLE = 'DOUBLE',\n}\n\nexport interface FeatureFlagConfig {\n  id: string;\n  name: string;\n  key: string;\n  organizationId: string;\n  projectId: string;\n  status: FlagStatusEnum;\n  description?: string | null;\n  defaultOnVariationId: string;\n  defaultOffVariationId: string;\n  valueType: FlagValueTypeEnum;\n  createdAt: Date;\n}\n\nexport interface FlagVariationValue {\n  key: string;\n  status: FlagStatusEnum;\n  value: VariationValue;\n  valueType: FlagValueTypeEnum;\n}\n\nexport interface VariationValue {\n  stringValue?: string;\n  booleanValue?: boolean;\n  longValue?: number;\n  doubleValue?: number;\n}\n\nexport interface FlagEvaluationDetail<T> {\n  key: string,\n  value: T,\n  reason: Record<string, any> | null\n}\n\nexport interface FlagCollection {\n  key: string,\n  value: VariationValue,\n  valueType: FlagValueTypeEnum,\n}\n","import { ConfigClient } from '@/client/type.client';\nimport { areObjectsEqual } from '@/util';\n\n// Mock flags\ninterface MockFlag {\n  key: string;\n  value: any;\n  context?: Record<string, any>;\n}\nlet mockedFlags: MockFlag[] = [];\n\n/**\n * Sets the mocked feature flags to the provided array of flags. \n * If a flag's context is not provided, it defaults to an empty object.\n *\n * @param flags An array of MockFlag objects representing the feature flags to be mocked.\n */\nconst mockFlags = (flags: MockFlag[]) => {\n  flags.forEach((flag) => {\n    if (!flag.context) {\n      flag.context = {}; // Set context to an empty object if it's undefined\n    }\n  });\n  mockedFlags = flags;\n};\n\n/**\n * Adds a mocked feature flag to the list of mocked flags.\n * If the flag's context is not provided, it defaults to an empty object.\n *\n * @param flag The MockFlag object representing the feature flag to be added.\n */\nconst addMockedFlag = (flag: MockFlag) => {\n  if (!flag.context) {\n    flag.context = {}; // Set context to an empty object if it's undefined\n  }\n  mockedFlags.push(flag);\n};\n\n/**\n * Removes a mocked feature flag with the specified key and context from the list of mocked flags.\n * If no context is provided, it removes the flag regardless of its context.\n *\n * @param key The key of the feature flag to be removed.\n * @param context (Optional) The context of the feature flag to be removed.\n */\nconst removeMockedFlag = (key: string, context?: Record<string, any>) => {\n  mockedFlags = context\n    ? mockedFlags.filter((flag) => !(flag.key === key && areObjectsEqual(flag.context, context)))\n    : mockedFlags.filter((flag) => flag.key !== key);\n};\n\nexport interface MockNumeratorProviderProps {\n  configClient?: ConfigClient;\n  defaultContext?: Record<string, any>;\n  loadPolling?: boolean;\n}\n\n// Mock NumeratorProvider\nconst useMockNumeratorProvider = (props: MockNumeratorProviderProps = {}) => {\n  let cacheFlags: Record<string, any> = {};\n  let defaultContext = props.defaultContext ?? {};\n\n  // Define base mock implementations for booleanFlagVariationDetail, numberFlagVariationDetail, and stringFlagVariationDetail\n  const flagVariationDetail = jest.fn(async (key, defaultVal, context?, useDefaultContext = true): Promise<any> => {\n    const requestContext = context ?? (useDefaultContext ? defaultContext : {});\n    const variation = mockedFlags.find((flag) => flag.key === key && areObjectsEqual(flag.context, requestContext));\n    if (variation) {\n      return {\n        key: key,\n        value: variation.value,\n        reason: {},\n      };\n    }\n    return {\n      key: key,\n      value: defaultVal,\n      reason: {},\n    };\n  });\n\n  // Define mock implementation for getFeatureFlag\n  const getFeatureFlag = jest.fn(async (key, defaultVal, context?, useDefaultContext = true): Promise<any> => {\n    const hasCacheValue = !!context && cacheFlags.hasOwnProperty(key) && areObjectsEqual(context, props.defaultContext);\n    switch (typeof defaultVal) {\n      case 'boolean':\n        if (hasCacheValue) {\n          return cacheFlags[key].value.booleanValue as boolean;\n        }\n        const resBoolean = await flagVariationDetail(key, defaultVal, context, useDefaultContext);\n        return resBoolean.value as boolean;\n      case 'number':\n        if (hasCacheValue) {\n          return cacheFlags[key].value.longValue ?? (cacheFlags[key].value.doubleValue as number);\n        }\n        const resNumber = await flagVariationDetail(key, defaultVal, context, useDefaultContext);\n        return resNumber.value as number;\n      case 'string':\n        if (hasCacheValue) {\n          return cacheFlags[key].value.stringValue as string;\n        }\n        const resString = await flagVariationDetail(key, defaultVal, context, useDefaultContext);\n        return resString.value as string;\n      default:\n        throw new Error('Unsupported flag type');\n    }\n  });\n  return {\n    /**\n     * Retrieve the feature flag value, working the same as the function provided in useNumeratorContext.\n     *\n     * @param key The key of the feature flag.\n     * @param defaultVal The default value to return if the feature flag is not found.\n     * @param context (Optional) The context for the feature flag.\n     * @param useDefaultContext (Optional) Specifies whether to use the default context if no context is provided. Defaults to true.\n     */\n    getFeatureFlag,\n    /**\n     * Retrieve the feature flag type BOOLEAN, working the same as the function provided in useNumeratorContext.\n     *\n     * @param key The key of the feature flag.\n     * @param defaultVal The default value to return if the feature flag is not found.\n     * @param context (Optional) The context for the feature flag.\n     * @param useDefaultContext (Optional) Specifies whether to use the default context if no context is provided. Defaults to true.\n     */\n    booleanFlagVariationDetail: flagVariationDetail,\n    /**\n     * Retrieve the feature flag type NUMBER (LONG or DOUBLE), working the same as the function provided in useNumeratorContext.\n     *\n     * @param key The key of the feature flag.\n     * @param defaultVal The default value to return if the feature flag is not found.\n     * @param context (Optional) The context for the feature flag.\n     * @param useDefaultContext (Optional) Specifies whether to use the default context if no context is provided. Defaults to true.\n     */\n    numberFlagVariationDetail: flagVariationDetail,\n    /**\n     * Retrieve the feature flag type STRING, working the same as the function provided in useNumeratorContext.\n     *\n     * @param key The key of the feature flag.\n     * @param defaultVal The default value to return if the feature flag is not found.\n     * @param context (Optional) The context for the feature flag.\n     * @param useDefaultContext (Optional) Specifies whether to use the default context if no context is provided. Defaults to true.\n     */\n    stringFlagVariationDetail: flagVariationDetail,\n    /**\n     * Retrieve the default context, working the same as the function provided in useNumeratorContext.\n     */\n    getDefaultContext: jest.fn(() => defaultContext),\n    /**\n     * Clear default context, working the same as the function provided in useNumeratorContext.\n     */\n    clearDefaultContext: jest.fn(() => (defaultContext = {})),\n    /**\n     * Add another default context, working the same as the function provided in useNumeratorContext.\n     */\n    addDefaultContextValue: jest.fn((key, value) => (defaultContext = { ...defaultContext, [key]: value })),\n    /**\n     * Remove an existing default context, working the same as the function provided in useNumeratorContext.\n     */\n    removeDefaultContextValue: jest.fn((key) => {\n      const { [key]: _, ...newDefaultContext } = defaultContext;\n      defaultContext = newDefaultContext;\n    }),\n    /**\n     * Update cache flags for faster retrieval of flag with default context, working the same as the function provided in useNumeratorContext.\n     */\n    fetchPollingFeatureFlag: jest.fn(async () => {\n      const result = mockedFlags.filter((flag) => areObjectsEqual(flag.context, defaultContext));\n      const newCache: Record<string, any> = {};\n      result.forEach((flag) => {\n        newCache[flag.key] = flag;\n      });\n      cacheFlags = newCache;\n    }),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    initFeatureFlag: jest.fn(),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    featureFlags: jest.fn(),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    flagValueByKey: jest.fn(),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    startPolling: jest.fn(),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    stopPolling: jest.fn(),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    restartPolling: jest.fn(),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    handleFlagUpdated: jest.fn(),\n    /**\n     * Currently not supported, but you might define on your own.\n     */\n    handleFlagUpdatedError: jest.fn(),\n    /**\n     * Current cache flags.\n     */\n    cacheFlags: cacheFlags,\n  };\n};\n\n/**\n * Resets the mocked flags array and mocks for NumeratorProvider.\n * \n * It clears the mockedFlags array and resets all mocked functions provided by useMockNumeratorProvider.\n */\nconst resetNumeratorMocks = () => {\n  // Reset mockedFlags array\n  mockedFlags = [];\n\n  // Reset mocks for NumeratorProvider\n  const mockProvider = useMockNumeratorProvider();\n  Object.values(mockProvider).forEach((mockFn) => {\n    if (typeof mockFn.mock !== 'undefined') {\n      mockFn.mockReset();\n    }\n  });\n};\n\n\nexport { mockFlags, addMockedFlag, removeMockedFlag, useMockNumeratorProvider, resetNumeratorMocks };\n"],"names":["createContext","useState","useCallback","useEffect","useMemo","_jsx","useContext","FlagStatusEnum","FlagValueTypeEnum"],"mappings":"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"}